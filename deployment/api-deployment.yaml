apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.22.0 (955b78124)
  creationTimestamp: null
  labels:
    io.kompose.service: api
  name: api
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: api
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: api
    spec:
      containers:
        - args:
          command:
            - ./init.sh
          env:
            - name: IS_MONGO_CLOUD_PROVIDED
              valueFrom:
                configMapKeyRef:
                  key: IS_MONGO_CLOUD_PROVIDED
                  name: env-mongo-env
            - name: JWT_ACCESS_EXPIRATION_MINUTES
              valueFrom:
                configMapKeyRef:
                  key: JWT_ACCESS_EXPIRATION_MINUTES
                  name: env-node-env
            - name: JWT_SECRET
              valueFrom:
                configMapKeyRef:
                  key: JWT_SECRET
                  name: env-node-env
            - name: LOG_ERROR_TRACE_TO_STACK
              valueFrom:
                configMapKeyRef:
                  key: LOG_ERROR_TRACE_TO_STACK
                  name: env-node-env
            - name: MONGODB_DEVELOPMENT_DATABASE_NAME
              valueFrom:
                configMapKeyRef:
                  key: MONGODB_DEVELOPMENT_DATABASE_NAME
                  name: env-mongo-env
            - name: MONGODB_DEVELOPMENT_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: MONGODB_DEVELOPMENT_PASSWORD
                  name: env-mongo-env
            - name: MONGODB_DEVELOPMENT_URL
              valueFrom:
                configMapKeyRef:
                  key: MONGODB_DEVELOPMENT_URL
                  name: env-mongo-env
            - name: MONGODB_DEVELOPMENT_USERNAME
              valueFrom:
                configMapKeyRef:
                  key: MONGODB_DEVELOPMENT_USERNAME
                  name: env-mongo-env
            - name: MONGODB_PROD_DATABASE_NAME
              valueFrom:
                configMapKeyRef:
                  key: MONGODB_PROD_DATABASE_NAME
                  name: env-mongo-env
            - name: MONGODB_PROD_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: MONGODB_PROD_PASSWORD
                  name: env-mongo-env
            - name: MONGODB_PROD_URL
              valueFrom:
                configMapKeyRef:
                  key: MONGODB_PROD_URL
                  name: env-mongo-env
            - name: MONGODB_PROD_USERNAME
              valueFrom:
                configMapKeyRef:
                  key: MONGODB_PROD_USERNAME
                  name: env-mongo-env
            - name: MONGODB_TEST_DATABASE_NAME
              valueFrom:
                configMapKeyRef:
                  key: MONGODB_TEST_DATABASE_NAME
                  name: env-mongo-env
            - name: MONGODB_TEST_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: MONGODB_TEST_PASSWORD
                  name: env-mongo-env
            - name: MONGODB_TEST_URL
              valueFrom:
                configMapKeyRef:
                  key: MONGODB_TEST_URL
                  name: env-mongo-env
            - name: MONGODB_TEST_USERNAME
              valueFrom:
                configMapKeyRef:
                  key: MONGODB_TEST_USERNAME
                  name: env-mongo-env
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  key: PORT
                  name: env-node-env
          image: tiagorccabral/tsnodestarter
          name: api
          ports:
            - containerPort: 3000
          resources: {}
          volumeMounts:
            - mountPath: /home/app
              name: api-claim0
            - mountPath: /home/app/node_modules
              name: node-modules
      restartPolicy: Always
      volumes:
        - name: api-claim0
          persistentVolumeClaim:
            claimName: api-claim0
        - name: node-modules
          persistentVolumeClaim:
            claimName: node-modules
status: {}
